<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="jakarta.persistence.ElementCollection"/>
    <fullyQualifiedTypeName name="java.lang.IndexOutOfBoundsException"/>
    <fullyQualifiedTypeName name="java.io.FileNotFoundException"/>
    <fullyQualifiedTypeName name="java.nio.file.Files"/>
    <fullyQualifiedTypeName name="java.nio.file.Paths"/>
    <fullyQualifiedTypeName name="java.nio.file.StandardCopyOption"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="javax.management.RuntimeErrorException"/>
    <fullyQualifiedTypeName name="org.apache.catalina.connector.Response"/>
    <fullyQualifiedTypeName name="com.movieflix.exceptions.MovieNotFoundException"/>
    <fullyQualifiedTypeName name="com.movieflix.exceptions.FileExistsException"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
    <fullyQualifiedTypeName name="org.springframework.http.ProblemDetail"/>
    <fullyQualifiedTypeName name="org.springframework.data.domain.Sort"/>
    <fullyQualifiedTypeName name="com.movieflix.utils.AppConstants"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.WebAuthenticationDetailsSource"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="com.movieflix.auth.entities.UserRole"/>
    <fullyQualifiedTypeName name="com.movieflix.auth.services.JwtService"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="jakarta.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="org.springframework.mail.javamail.JavaMailSender"/>
    <fullyQualifiedTypeName name="org.springframework.mail.SimpleMailMessage"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="com.movieflix.auth.repositories.ForgotPasswordRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="com.movieflix.dto.MailBody"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="com.movieflix.auth.entities.ForgotPassword"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="java.time.Instant"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="java.util.Objects"/>
</qualifiedTypeNameHistroy>
